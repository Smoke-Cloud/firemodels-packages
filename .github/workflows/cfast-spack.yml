
on: [push, pull_request]

name: FDS-Spack

jobs:
  build-rpm:
    name: Build RPM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          # - "fedora:40"
          - "fedora:42"
          # - "rockylinux:9"
          # - "almalinux:10"
        fds-version:
        #   - "5.5.3"
          - "6.1.2"
          - "6.2.0"
          - "6.3.0"
          - "6.3.1"
          - "6.3.2"
          - "6.4.0"
          - "6.5.0"
          - "6.5.1"
          - "6.5.2"
          - "6.5.3"
          - "6.6.0"
          - "6.7.0"
          - "6.7.1"
          - "6.7.3"
          - "6.7.4"
          - "6.7.5"
          - "6.7.6+openmp"
          - "6.7.7"
          - "6.7.8"
          - "6.7.9"
          - "6.8.0"
          - "6.9.0"
          - "6.9.1"
          - "6.10.0"
       #   - "latest"
    container: ${{ matrix.container }}
    steps:
        - uses: actions/checkout@v4
        - name: Install prerequisites
          run: dnf install -y file bzip2 ca-certificates git gzip patch python3 tar unzip xz zstd gcc gcc-c++ gcc-gfortran clang
        - name: Set up Spack
          uses: spack/setup-spack@v2
          with:
            ref: develop      # Spack version (examples: develop, releases/v0.23)
            buildcache: true  # Configure oci://ghcr.io/spack/github-actions-buildcache
            color: true       # Force color output (SPACK_COLOR=always)
            path: spack       # Where to clone Spack
        - run: spack install intel-oneapi-compilers
        - run: spack compiler find
        - run: spack repo create $HOME/my_pkgs my_repo
        - run: spack repo add $HOME/my_pkgs/spack_repo/my_repo
        - run: spack create --name fdsc --skip-editor
        - run: cp fds-spack/* $HOME/my_pkgs/spack_repo/my_repo/packages/fdsc
        - run: spack install fdsc@${{matrix.fds-version}}%oneapi
    #   - name: General update
    #     run: dnf update -y --refresh
    #   - name: Install environment-modules
    #     run: dnf install -y environment-modules
    #   - name: Install prerequisites
    #     run: dnf install -y git gcc kmod openssl-devel rpmdevtools make
    #   - name: Install fedora libxcrypt-compat
    #     run: dnf install -y libxcrypt-compat || true
    #   - name: Install fedora procps
    #     run: dnf install -y procps || true
    #   - name: Install Intel OneAPI packages
    #     run: dnf install -y
    #       intel-oneapi-compiler-fortran-2025.1.0-973
    #       intel-oneapi-mkl-devel-2025.1.0-801
    #       intel-oneapi-mpi-devel-2021.15.0-493
    #       intel-oneapi-compiler-dpcpp-cpp-2025.1.0-973
    #       openmpi-devel
    #       mpich-devel
    #   - run: /opt/intel/oneapi/modulefiles-setup.sh
    #   - name: Build RPM
    #     run: |
    #       cd fds
    #       export version=${{ matrix.fds-version }}
    #       export repo=$(awk -F, -v version="$version" '$1 == version { print $2; exit }' versions.csv)
    #       export commit=$(awk -F, -v version="$version" '$1 == version { print $3; exit }' versions.csv)
    #       export date=$(awk -F, -v version="$version" '$1 == version { print $4; exit }' versions.csv)
    #       export version_patch=$(awk -F, -v version="$version" '$1 == version { print $5; exit }' versions.csv)
    #       export backports_patch=$(awk -F, -v version="$version" '$1 == version { print $6; exit }' versions.csv)
    #       bash ./buildrpm.sh $version $repo $commit $date $version_patch $backports_patch
    #   - name: String Transform container name
    #     id: transform
    #     uses: relab-services/string-transform@v1
    #     with:
    #         source: ${{ matrix.container }}
    #         transform: replace(":", "_")
    #   - uses: actions/upload-artifact@v4
    #     with:
    #       name: FDS-RPM-${{ steps.transform.outputs.var }}-${{ matrix.fds-version }}
    #       path: |
    #         dist/*.rpm
#   merge:
#     runs-on: ubuntu-latest
#     needs: build-rpm
#     steps:
#       - name: Merge Artifacts
#         uses: actions/upload-artifact/merge@v4
#         with:
#           name: FDS-RPMs
#           pattern: FDS-RPM-*
#           delete-merged: true
