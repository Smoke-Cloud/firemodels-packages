on: [push, pull_request]

name: CFAST

jobs:
  build-rpm:
    name: Build RPM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - "fedora:40"
          - "rockylinux:9"
          - "almalinux:10"
        cfast-version:
          - "7.0.1"
          - "7.1.0"
          - "7.1.1"
          - "7.1.2"
          - "7.2.0"
          - "7.2.1"
          - "7.2.2"
          - "7.2.3"
          - "7.2.4"
          - "7.3.0"
          - "7.3.1"
          - "7.4.0"
          - "7.4.2"
          - "7.4.3"
          - "7.5.1"
          - "7.5.2"
          - "7.7.0"
          - "7.7.1"
          - "7.7.2"
          - "7.7.3"
          - "7.7.4"
          # - "latest"
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
      - name: Add intel RPM repo
        run: |
          tee > /tmp/oneAPI.repo << EOF
          [oneAPI]
          name=IntelÂ® oneAPI repository
          baseurl=https://yum.repos.intel.com/oneapi
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          EOF
          mv /tmp/oneAPI.repo /etc/yum.repos.d
      - name: Install environment-modules
        run: dnf install -y environment-modules
      - name: Install fedora libxcrypt-compat
        run: dnf install -y libxcrypt-compat || true
      - name: Install fedora procps
        run: dnf install -y procps || true
      - name: Install prerequisites
        run: dnf install -y git gcc-gfortran rpmdevtools make intel-oneapi-compiler-fortran intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic

      - run: /opt/intel/oneapi/modulefiles-setup.sh
      - name: Build RPM
        run: |
          cd cfast
          export version=${{ matrix.cfast-version }}
          export commit=$(awk -F, -v version="$version" '$1 == version { print $2; exit }' versions.csv)
          export date=$(awk -F, -v version="$version" '$1 == version { print $3; exit }' versions.csv)
          export version_patch=$(awk -F, -v version="$version" '$1 == version { print $4; exit }' versions.csv)
          export backports_patch=$(awk -F, -v version="$version" '$1 == version { print $5; exit }' versions.csv)
          ./buildrpm.sh $version $commit $date $version_patch $backports_patch
      - name: String Transform container name
        id: transform
        uses: relab-services/string-transform@v1
        with:
            source: ${{ matrix.container }}
            transform: replace(":", "_")
      - uses: actions/upload-artifact@v4
        with:
          name: CFAST-RPM-${{ steps.transform.outputs.var }}-${{ matrix.cfast-version }}
          path: |
            dist/*.rpm
  merge:
    runs-on: ubuntu-latest
    needs: build-rpm
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: CFAST-RPMs
          pattern: CFAST-RPM-*
          delete-merged: true
